{
  "version": 3,
  "sources": ["../../prismjs/components/prism-java.js"],
  "sourcesContent": ["(function (Prism) {\r\n\r\n\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\r\n\r\n\t// full package (optional) + parent classes (optional)\r\n\tvar classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\r\n\r\n\t// based on the java naming conventions\r\n\tvar className = {\r\n\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'namespace': {\r\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /\\./\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\./\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.java = Prism.languages.extend('clike', {\r\n\t\t'string': {\r\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'class-name': [\r\n\t\t\tclassName,\r\n\t\t\t{\r\n\t\t\t\t// variables, parameters, and constructor references\r\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n\t\t\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: className.inside\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// class names based on keyword\r\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n\t\t\t\tpattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: className.inside\r\n\t\t\t}\r\n\t\t],\r\n\t\t'keyword': keywords,\r\n\t\t'function': [\r\n\t\t\tPrism.languages.clike.function,\r\n\t\t\t{\r\n\t\t\t\tpattern: /(::\\s*)[a-z_]\\w*/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\r\n\t\t'operator': {\r\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'constant': /\\b[A-Z][A-Z_\\d]+\\b/\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('java', 'string', {\r\n\t\t'triple-quoted-string': {\r\n\t\t\t// http://openjdk.java.net/jeps/355#Description\r\n\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string'\r\n\t\t},\r\n\t\t'char': {\r\n\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('java', 'class-name', {\r\n\t\t'annotation': {\r\n\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'punctuation'\r\n\t\t},\r\n\t\t'generics': {\r\n\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\r\n\t\t\tinside: {\r\n\t\t\t\t'class-name': className,\r\n\t\t\t\t'keyword': keywords,\r\n\t\t\t\t'punctuation': /[<>(),.:]/,\r\n\t\t\t\t'operator': /[?&|]/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'import': [\r\n\t\t\t{\r\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': className.inside.namespace,\r\n\t\t\t\t\t'punctuation': /\\./,\r\n\t\t\t\t\t'operator': /\\*/,\r\n\t\t\t\t\t'class-name': /\\w+/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'static',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': className.inside.namespace,\r\n\t\t\t\t\t'static': /\\b\\w+$/,\r\n\t\t\t\t\t'punctuation': /\\./,\r\n\t\t\t\t\t'operator': /\\*/,\r\n\t\t\t\t\t'class-name': /\\w+/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'namespace': {\r\n\t\t\tpattern: RegExp(\r\n\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\r\n\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /\\./,\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}(Prism));\r\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAEjB,MAAI,WAAW;AAGf,MAAI,kBAAkB,6CAA6C;AAGnE,MAAI,YAAY;AAAA,IACf,SAAS,OAAO,aAAa,SAAS,kBAAkB,gCAAgC,MAAM;AAAA,IAC9F,YAAY;AAAA,IACZ,QAAQ;AAAA,MACP,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,QAAQ;AAAA,UACP,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AAEA,EAAAA,OAAM,UAAU,OAAOA,OAAM,UAAU,OAAO,SAAS;AAAA,IACtD,UAAU;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACT;AAAA,IACA,cAAc;AAAA,MACb;AAAA,MACA;AAAA;AAAA;AAAA,QAGC,SAAS,OAAO,aAAa,SAAS,kBAAkB,+DAA+D,MAAM;AAAA,QAC7H,YAAY;AAAA,QACZ,QAAQ,UAAU;AAAA,MACnB;AAAA,MACA;AAAA;AAAA;AAAA,QAGC,SAAS,OAAO,kFAAkF,SAAS,kBAAkB,aAAa,MAAM;AAAA,QAChJ,YAAY;AAAA,QACZ,QAAQ,UAAU;AAAA,MACnB;AAAA,IACD;AAAA,IACA,WAAW;AAAA,IACX,YAAY;AAAA,MACXA,OAAM,UAAU,MAAM;AAAA,MACtB;AAAA,QACC,SAAS;AAAA,QACT,YAAY;AAAA,MACb;AAAA,IACD;AAAA,IACA,UAAU;AAAA,IACV,YAAY;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,YAAY;AAAA,EACb,CAAC;AAED,EAAAA,OAAM,UAAU,aAAa,QAAQ,UAAU;AAAA,IAC9C,wBAAwB;AAAA;AAAA,MAEvB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,EACD,CAAC;AAED,EAAAA,OAAM,UAAU,aAAa,QAAQ,cAAc;AAAA,IAClD,cAAc;AAAA,MACb,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACR;AAAA,IACA,YAAY;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,QACP,cAAc;AAAA,QACd,WAAW;AAAA,QACX,eAAe;AAAA,QACf,YAAY;AAAA,MACb;AAAA,IACD;AAAA,IACA,UAAU;AAAA,MACT;AAAA,QACC,SAAS,OAAO,gBAAgB,SAAS,kBAAkB,0BAA0B,MAAM;AAAA,QAC3F,YAAY;AAAA,QACZ,QAAQ;AAAA,UACP,aAAa,UAAU,OAAO;AAAA,UAC9B,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,cAAc;AAAA,QACf;AAAA,MACD;AAAA,MACA;AAAA,QACC,SAAS,OAAO,yBAAyB,SAAS,kBAAkB,qBAAqB,MAAM;AAAA,QAC/F,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,QAAQ;AAAA,UACP,aAAa,UAAU,OAAO;AAAA,UAC9B,UAAU;AAAA,UACV,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,cAAc;AAAA,QACf;AAAA,MACD;AAAA,IACD;AAAA,IACA,aAAa;AAAA,MACZ,SAAS;AAAA,QACR,qJACE,OAAO,QAAQ,cAAc,WAAY;AAAE,iBAAO,SAAS;AAAA,QAAQ,CAAC;AAAA,MAAC;AAAA,MACxE,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,eAAe;AAAA,MAChB;AAAA,IACD;AAAA,EACD,CAAC;AACF,GAAE,KAAK;",
  "names": ["Prism"]
}
